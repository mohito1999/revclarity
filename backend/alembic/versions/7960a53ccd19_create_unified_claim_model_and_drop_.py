"""create unified claim model and drop analysis table

Revision ID: 7960a53ccd19
Revises: 7b04974c33ec
Create Date: 2025-06-18 12:09:00.220603

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7960a53ccd19'
down_revision: Union[str, None] = '7b04974c33ec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('claim_analysis')
    op.add_column('claims', sa.Column('insurance_type', sa.String(length=50), nullable=True))
    op.add_column('claims', sa.Column('insured_id_number', sa.String(length=255), nullable=True))
    op.add_column('claims', sa.Column('insured_name', sa.String(length=255), nullable=True))
    op.add_column('claims', sa.Column('insured_address', sa.Text(), nullable=True))
    op.add_column('claims', sa.Column('is_condition_related_to_employment', sa.Boolean(), nullable=True))
    op.add_column('claims', sa.Column('is_condition_related_to_auto_accident', sa.Boolean(), nullable=True))
    op.add_column('claims', sa.Column('is_condition_related_to_other_accident', sa.Boolean(), nullable=True))
    op.add_column('claims', sa.Column('insured_policy_group_or_feca_number', sa.String(length=255), nullable=True))
    op.add_column('claims', sa.Column('date_of_current_illness', sa.DateTime(), nullable=True))
    op.add_column('claims', sa.Column('referring_provider_name', sa.String(length=255), nullable=True))
    op.add_column('claims', sa.Column('referring_provider_npi', sa.String(length=20), nullable=True))
    op.add_column('claims', sa.Column('prior_authorization_number', sa.String(length=255), nullable=True))
    op.add_column('claims', sa.Column('federal_tax_id_number', sa.String(length=50), nullable=True))
    op.add_column('claims', sa.Column('patient_account_no', sa.String(length=255), nullable=True))
    op.add_column('claims', sa.Column('accept_assignment', sa.Boolean(), nullable=True))
    op.add_column('claims', sa.Column('total_charge_amount', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('claims', sa.Column('amount_paid_by_patient', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('claims', sa.Column('service_facility_location_info', sa.Text(), nullable=True))
    op.add_column('claims', sa.Column('billing_provider_info', sa.Text(), nullable=True))
    op.add_column('claims', sa.Column('billing_provider_npi', sa.String(length=20), nullable=True))
    op.add_column('claims', sa.Column('denial_reason', sa.Text(), nullable=True))
    op.add_column('claims', sa.Column('denial_root_cause', sa.Text(), nullable=True))
    op.add_column('claims', sa.Column('denial_recommended_action', sa.Text(), nullable=True))
    op.create_index(op.f('ix_claims_patient_id'), 'claims', ['patient_id'], unique=False)
    op.create_index(op.f('ix_claims_status'), 'claims', ['status'], unique=False)
    op.drop_column('claims', 'total_amount')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('claims', sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_claims_status'), table_name='claims')
    op.drop_index(op.f('ix_claims_patient_id'), table_name='claims')
    op.drop_column('claims', 'denial_recommended_action')
    op.drop_column('claims', 'denial_root_cause')
    op.drop_column('claims', 'denial_reason')
    op.drop_column('claims', 'billing_provider_npi')
    op.drop_column('claims', 'billing_provider_info')
    op.drop_column('claims', 'service_facility_location_info')
    op.drop_column('claims', 'amount_paid_by_patient')
    op.drop_column('claims', 'total_charge_amount')
    op.drop_column('claims', 'accept_assignment')
    op.drop_column('claims', 'patient_account_no')
    op.drop_column('claims', 'federal_tax_id_number')
    op.drop_column('claims', 'prior_authorization_number')
    op.drop_column('claims', 'referring_provider_npi')
    op.drop_column('claims', 'referring_provider_name')
    op.drop_column('claims', 'date_of_current_illness')
    op.drop_column('claims', 'insured_policy_group_or_feca_number')
    op.drop_column('claims', 'is_condition_related_to_other_accident')
    op.drop_column('claims', 'is_condition_related_to_auto_accident')
    op.drop_column('claims', 'is_condition_related_to_employment')
    op.drop_column('claims', 'insured_address')
    op.drop_column('claims', 'insured_name')
    op.drop_column('claims', 'insured_id_number')
    op.drop_column('claims', 'insurance_type')
    op.create_table('claim_analysis',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('claim_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('carc_codes', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('rarc_codes', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('summary_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('recommended_action', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['claim_id'], ['claims.id'], name=op.f('claim_analysis_claim_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('claim_analysis_pkey'))
    )
    # ### end Alembic commands ###
